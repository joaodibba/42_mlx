/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   teste6.c                                           :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: jalves-c < jalves-c@student.42lisboa.co    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/03/17 17:08:24 by jalves-c          #+#    #+#             */
/*   Updated: 2023/03/28 17:28:12 by jalves-c         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../include/mlxtest.h"

#define WINDOW_WIDTH 1280
#define WINDOW_HEIGHT 720
#define MLX_ERROR 1
#define ESCAPE 65307

//colors
#define RED_PIXEL 0XFF0000
#define GREEN_PIXEL 0XFF00
#define WHITE_PIXEL 0XFFFFFF

void render_background(t_data *data, int color)
{
    int j;
    int i;

    if (data->win_ptr == NULL)
        return ;
    i = 0;
    while(i < WINDOW_HEIGHT)
    {
        j = 0;
        while(j < WINDOW_WIDTH)
            mlx_pixel_put(data->mlx_ptr, data->win_ptr, j++, i, color);
        ++i;
    }
}

int render_rect(t_data *data, t_rect rect)
{
    int i;
    int j;

    if(data->win_ptr == NULL)
        return (1);
    i = rect.y;
    while (i < rect.y + rect.height)
    {
        j = rect.x;
        while(j <rect.x + rect.width)
            mlx_pixel_put(data->mlx_ptr, data->win_ptr, j++, i, rect.color);
        ++i;
    }
    return (0);
}
int handle_keypress(int keysym, t_data *data)
{
    if (keysym == ESCAPE)
    {
        mlx_destroy_window(data->mlx_ptr, data->win_ptr);
        data->win_ptr = NULL;
    }
    printf ("Keypress: %d\n", keysym);
    return (0);
}

int handle_keyrelease(int keysym, void *data)
{
    (void)data;
    printf("keyrelease: %d\n", keysym);
    return (0);
}

int render(t_data *data)
{
    render_background(data, WHITE_PIXEL);
    render_rect(data, (t_rect){WINDOW_WIDTH - 100, WINDOW_HEIGHT - 100, 100, 100, GREEN_PIXEL});
    render_rect(data, (t_rect){0, 0, 100, 100, RED_PIXEL});
    return (0);
}
int	main(void)
{
    t_data data;

	data.mlx_ptr = mlx_init();
	if (data.mlx_ptr == NULL)
		return (MLX_ERROR);
	data.win_ptr = mlx_new_window(data.mlx_ptr,WINDOW_WIDTH, WINDOW_HEIGHT, "Window :)");
	if (data.mlx_ptr == NULL)
    {
        free(data.win_ptr);
        return (MLX_ERROR);
    }
    mlx_loop_hook(data.mlx_ptr, &render, &data);
    mlx_hook(data.win_ptr, KeyPress, KeyPressMask, &handle_keypress, &data);
    mlx_hook(data.win_ptr, KeyRelease, KeyReleaseMask, &handle_keyrelease, &data);

    mlx_loop(data.mlx_ptr);

	mlx_destroy_display(data.mlx_ptr);
	free(data.mlx_ptr);
}
